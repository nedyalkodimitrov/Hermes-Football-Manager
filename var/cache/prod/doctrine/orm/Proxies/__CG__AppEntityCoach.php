<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Coach extends \App\Entity\Coach implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['image' => NULL, 'status' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->image, $this->status);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'youthTeam', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'team', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'schedule', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'birthDay', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'position', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'teamPosition', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'requestsToPlayers', 'image', 'status'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'youthTeam', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'team', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'schedule', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'birthDay', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'position', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'teamPosition', '' . "\0" . 'App\\Entity\\Coach' . "\0" . 'requestsToPlayers'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Coach $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->image, $this->status);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getYouthTeam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYouthTeam', []);

        return parent::getYouthTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function setYouthTeam($youthTeam): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYouthTeam', [$youthTeam]);

        parent::setYouthTeam($youthTeam);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeam', []);

        return parent::getTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeam($team): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeam', [$team]);

        parent::setTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchedule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchedule', []);

        return parent::getSchedule();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchedule($schedule): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchedule', [$schedule]);

        parent::setSchedule($schedule);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthDay', []);

        return parent::getBirthDay();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthDay($birthDay): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthDay', [$birthDay]);

        parent::setBirthDay($birthDay);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeamPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeamPosition', []);

        return parent::getTeamPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeamPosition($teamPosition): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeamPosition', [$teamPosition]);

        parent::setTeamPosition($teamPosition);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(string $image): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(string $status): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequestsToPlayers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequestsToPlayers', []);

        return parent::getRequestsToPlayers();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequestsToPlayers($requestsToPlayers): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequestsToPlayers', [$requestsToPlayers]);

        parent::setRequestsToPlayers($requestsToPlayers);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
